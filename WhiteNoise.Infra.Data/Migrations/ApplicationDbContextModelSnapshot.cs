// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhiteNoise.Infra.Data.Contexts;

namespace WhiteNoise.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WhiteNoise.Domain.Entities.Agendamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacoes")
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(500);

                    b.Property<Guid?>("PacienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProfissionalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("Agendamento");
                });

            modelBuilder.Entity("WhiteNoise.Domain.Entities.Departamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("WhiteNoise.Domain.Entities.EstadoClinico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("EstadoClinico");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4a4a4a4-0000-0000-0000-000000000001"),
                            Descricao = "Estável"
                        },
                        new
                        {
                            Id = new Guid("a4a4a4a4-0000-0000-0000-000000000002"),
                            Descricao = "Observação"
                        },
                        new
                        {
                            Id = new Guid("a4a4a4a4-0000-0000-0000-000000000003"),
                            Descricao = "Grave"
                        },
                        new
                        {
                            Id = new Guid("a4a4a4a4-0000-0000-0000-000000000004"),
                            Descricao = "Crítico"
                        });
                });

            modelBuilder.Entity("WhiteNoise.Domain.Entities.Internacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativa")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LeitoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<Guid?>("PacienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProntuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("TipoSaida")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeitoId");

                    b.HasIndex("PacienteId");

                    b.HasIndex("ProntuarioId")
                        .IsUnique()
                        .HasFilter("[ProntuarioId] IS NOT NULL");

                    b.ToTable("Internacao");
                });

            modelBuilder.Entity("WhiteNoise.Domain.Entities.Leito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DepartamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(90)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Leito");
                });

            modelBuilder.Entity("WhiteNoise.Domain.Entities.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Ativo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(11);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(100);

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique()
                        .HasFilter("[Cpf] IS NOT NULL");

                    b.ToTable("Pessoa");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pessoa");
                });

            modelBuilder.Entity("WhiteNoise.Domain.Entities.Prontuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(500);

                    b.Property<string>("QueixaPrincipal")
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Prontuario");
                });

            modelBuilder.Entity("WhiteNoise.Domain.Entities.Paciente", b =>
                {
                    b.HasBaseType("WhiteNoise.Domain.Entities.Pessoa");

                    b.Property<bool>("EmInternacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("EstadoClinicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoPaciente")
                        .HasColumnType("int");

                    b.Property<int>("TipoSanguineo")
                        .HasColumnType("int");

                    b.HasIndex("EstadoClinicoId");

                    b.HasDiscriminator().HasValue("Paciente");
                });

            modelBuilder.Entity("WhiteNoise.Domain.Entities.Profissional", b =>
                {
                    b.HasBaseType("WhiteNoise.Domain.Entities.Pessoa");

                    b.Property<Guid?>("DepartamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RegistroProfissional")
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(50);

                    b.HasIndex("DepartamentoId");

                    b.HasDiscriminator().HasValue("Profissional");
                });

            modelBuilder.Entity("WhiteNoise.Domain.Entities.Agendamento", b =>
                {
                    b.HasOne("WhiteNoise.Domain.Entities.Paciente", "Paciente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("PacienteId");

                    b.HasOne("WhiteNoise.Domain.Entities.Profissional", "Profissional")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ProfissionalId");
                });

            modelBuilder.Entity("WhiteNoise.Domain.Entities.Internacao", b =>
                {
                    b.HasOne("WhiteNoise.Domain.Entities.Leito", "Leito")
                        .WithMany("Internacoes")
                        .HasForeignKey("LeitoId");

                    b.HasOne("WhiteNoise.Domain.Entities.Paciente", "Paciente")
                        .WithMany("Internacoes")
                        .HasForeignKey("PacienteId");

                    b.HasOne("WhiteNoise.Domain.Entities.Prontuario", "Prontuario")
                        .WithOne()
                        .HasForeignKey("WhiteNoise.Domain.Entities.Internacao", "ProntuarioId");
                });

            modelBuilder.Entity("WhiteNoise.Domain.Entities.Leito", b =>
                {
                    b.HasOne("WhiteNoise.Domain.Entities.Departamento", "Departamento")
                        .WithMany("Leitos")
                        .HasForeignKey("DepartamentoId");
                });

            modelBuilder.Entity("WhiteNoise.Domain.Entities.Paciente", b =>
                {
                    b.HasOne("WhiteNoise.Domain.Entities.EstadoClinico", "EstadoClinico")
                        .WithMany()
                        .HasForeignKey("EstadoClinicoId");
                });

            modelBuilder.Entity("WhiteNoise.Domain.Entities.Profissional", b =>
                {
                    b.HasOne("WhiteNoise.Domain.Entities.Departamento", "Departamento")
                        .WithMany("Profissionais")
                        .HasForeignKey("DepartamentoId");
                });
#pragma warning restore 612, 618
        }
    }
}
